# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  save_hello_world_output:
    docker:
      - image: cimg/node:18.3.0
    steps:
      - checkout
      - run:
          command: "echo text to output here > ~/output.txt"
      # save the files your deploy step needs
      - persist_to_workspace:
          root: ~/ # relative path to our working directory
          paths: # file globs which will be persisted to the workspace
            - output.txt

  print_output_file:
    docker:
      - image: cimg/node:18.3.0
    steps:
      # attach the files you persisted in the doing-things-job
      - attach_workspace:
          at: ~/ # relative path to our working directory
      - run: cat ~/output.txt

  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  print_hello:
    docker:
      - image: cimg/node:18.3.0
    steps:
      - checkout
      - run:
          name: "Print Hello"
          command: "echo Hello"

  print_world:
    docker:
      - image: cimg/node:18.3.0
    steps:
      - checkout
      - run:
          name: "Print World"
          command: "echo World"

  print_env:
    docker:
      - image: cimg/base:2021.11
    steps:
      - checkout
      - run:
          name: "echo an env var that is part of our project"
          command: |
            echo Hello, $MY_NAME

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_env
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
